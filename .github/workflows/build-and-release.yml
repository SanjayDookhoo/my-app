name: Build and Release Capacitor App

on:
  push:
    branches: [main]

jobs:
  build-android:
    runs-on: ubuntu-latest
    outputs:
      datetime_tag: ${{ steps.timestamp.outputs.datetime_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set time-based release tag (GMT -4)
        id: timestamp
        run: |
          export TZ=America/Puerto_Rico
          DATETIME=$(date +"%Y-%m-%d-%H-%M")
          echo "datetime_tag=$DATETIME" >> "$GITHUB_OUTPUT"

      - name: Install dependencies
        run: npm ci

      - name: Build Android APK
        run: |
          npm run build
          npx cap sync android
          cd android
          ./gradlew assembleRelease

      - name: Rename and upload APK artifact
        run: |
          mkdir -p release
          cp android/app/build/outputs/apk/release/app-release.apk release/app-${{ steps.timestamp.outputs.datetime_tag }}.apk

      - uses: actions/upload-artifact@v4
        with:
          name: android-artifact
          path: release/*.apk


  build-ios:
    runs-on: macos-latest
    needs: build-android
    outputs:
      datetime_tag: ${{ needs.build-android.outputs.datetime_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build unsigned IPA
        run: |
          npm run build
          npx cap sync ios
          cd ios/App
          xcodebuild -scheme App -configuration Release -sdk iphoneos \
            -destination generic/platform=iOS \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO \
            build

          mkdir -p Payload
          cp -r build/Release-iphoneos/*.app Payload/
          zip -r App-${{ needs.build-android.outputs.datetime_tag }}.ipa Payload
          mkdir -p release
          mv App-${{ needs.build-android.outputs.datetime_tag }}.ipa release/

      - uses: actions/upload-artifact@v4
        with:
          name: ios-artifact
          path: release/*.ipa

  release:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    steps:
      - uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: android-artifact
          path: release

      - name: Download IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-artifact
          path: release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ needs.build-android.outputs.datetime_tag }}
          name: Release ${{ needs.build-android.outputs.datetime_tag }}
          files: |
            release/*.apk
            release/*.ipa
